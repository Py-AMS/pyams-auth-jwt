image: python:3.5

stages:
    - test
    - dist
    - quality

cache:
    paths:
        - bin/
        - eggs/
        - parts/

before_script:
    - /bin/ping -W 1 -c 1 172.17.0.1 && export http_proxy=http://172.17.0.1:3128/
    - /bin/ping -W 1 -c 1 172.17.0.1 && export HTTP_PROXY=http://172.17.0.1:3128/
    - /bin/ping -W 1 -c 1 172.17.0.1 && export https_proxy=http://172.17.0.1:3128/
    - /bin/ping -W 1 -c 1 172.17.0.1 && export HTTPS_PROXY=http://172.17.0.1:3128/

bootstrap:
    stage: .pre
    script:
        - python3.5 bootstrap.py --buildout-version=2.13.3
        - ./bin/buildout

test-3.5:
    stage: test
    script:
        - pip install anybadge coverage
        - mkdir ./coverage
        - coverage erase
        - coverage run ./bin/test | tee ./coverage/coverage.log
        - coverage xml
        - GLOBAL_COVER=$(coverage report | grep TOTAL | awk '{print $4}' | cut -d '%' -f 1)
        - anybadge --label=Coverage --file=./coverage/coverage.svg --value=$GLOBAL_COVER coverage
        - echo "Global tests coverage is $GLOBAL_COVER %"
    artifacts:
        paths:
            - ./coverage/
            - coverage.xml

dist:
    stage: dist
    script:
        - ./bin/buildout setup setup.py clean --all sdist bdist_egg bdist_wheel
    artifacts:
        paths:
            - ./dist
    only:
        refs:
            - tags

pylint:
    stage: quality
    allow_failure: true
    script:
        - pip install pylint-exit anybadge
        - mkdir ./pylint
        - ./bin/pylint src/pyams_auth_jwt/ | tee ./pylint/pylint.log || pylint-exit $?
        - PYLINT_SCORE=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' ./pylint/pylint.log)
        - anybadge --label=Pylint --file=./pylint/pylint.svg --value=$PYLINT_SCORE pylint
        - echo "Pylint score is $PYLINT_SCORE"
    artifacts:
        paths:
            - ./pylint/

coverage:
    stage: quality
    allow_failure: true
    image:
        name: sonarsource/sonar-scanner-cli:4.3
        entrypoint: [""]
    variables:
        SONAR_URL: http://sonar.dev-dsm.onf.fr
        SONAR_HOST_URL: http://sonar.dev-dsm.onf.fr
    script:
        - sonar-scanner -Dsonar.qualitygate.wait=true
    only:
        - merge_requests
        - master
    except:
        variables:
            - $CODE_COVERAGE_DISABLED

quality:
    stage: quality
    allow_failure: true
    image: docker:stable
    services:
        - docker:stable-dind
    variables:
        DOCKER_DRIVER: overlay2
        DOCKER_TLS_CERTDIR: ""
    script:
        - |
            if ! docker info &>/dev/null; then
              if [ -z "$DOCKER_HOST" -a "$KUBERNETES_PORT" ]; then
                export DOCKER_HOST='tcp://localhost:2375'
              fi
            fi
        - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
        - docker run
            --env SOURCE_CODE="$PWD"
            --volume "$PWD":/code
            --volume /var/run/docker.sock:/var/run/docker.sock
            "registry.gitlab.com/gitlab-org/security-products/codequality:$SP_VERSION" /code
    artifacts:
        reports:
            codequality: gl-code-quality-report.json
        expire_in: 1 week
    dependencies: []
    only:
        refs:
            - branches
            - tags
    except:
        variables:
            - $CODE_QUALITY_DISABLED
